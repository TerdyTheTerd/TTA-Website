@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using Newtonsoft.Json
@using CodeKicker.BBCode;
@model IEnumerable<WebApplication1.Models.Post>

<!DOCTYPE html>
<link href="~/Content/Site.css" rel="stylesheet" />

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <div class="col-md-10 col-md-offset-1 ViewForumsMain">
        <div class="ForumsBody">
        <h2 style="text-align: center">@ViewBag.Cat.Replace('-', ' ') </h2>
            @if(Request.IsAuthenticated)
            {
            <div class="forumsButons">
                <div class="butonsLeft">
                    <div class="ForumCreate classBtn">
                        @Html.ActionLink("Create Thread", "Create", "Forums", new { category = @ViewBag.Cat }, new { @class = "createLink"})
                    </div>
                    <div class="butonSubscribe classBtn">
                        @*Create modal popup to ask if user wants to recieve email notifications whenever a new thread is posted for this category*@
                        @Html.ActionLink("Subscribe", "Subscribe", "Forums", null, new { @class = "subscribeLink"})
                    </div>
                    
                </div>
                <div class="butonsRight">
                    <div class="forumsSearch">

                    </div>
                </div>
            </div>

            } else
            {
                <div class="forumsAnon">
                    <span>You must be logged in to create new Post.</span>
                </div>
            }
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <td class="tableTitle">Title</td>
                    <td class="tableAuthor tableCenter">Author</td>
                    <td class="tableViews tableCenter">Views</td>
                    <td class="tablePoint tableCenter" >Points</td>
                    <td class="tableReplies tableCenter">Replies</td>
                    <td class="tableDate tableCenter">Date Created</td>
                </tr>
            </thead>   
            <tbody data-bind="foreach:currentPosts">
                <tr >
                    <td><a class="forumsLink" data-bind="text:Title, attr: {href: '/Forums/ViewPost/' + Id}"></a></td>
                    <td class="tableCenter" ><a class="forumsLink" data-bind="text:Author, attr: {href: '/Dashboard/Index/' + Author}"></a></td>
                    <td class="tableCenter" data-bind="text:Views"></td>
                    <td class="tableCenter" data-bind="text:Points"></td>
                    <td class="tableCenter" data-bind="text:Replies"></td>
                    <td class="tableCenter" data-bind="text: moment(PostedDate).fromNow()".Date.ToString("dd MMM yyyy") ></td>
                </tr>
            </tbody>
        </table>
            <div class="forumsPage">
                <span data-bind="click:previousPage,visible:currentPage() > 1" class="glyphicon glyphicon-arrow-left" style="cursor: pointer"></span>
                <span data-bind="text:currentPage"></span>
                <span data-bind="click:nextPage,visible:currentPage() < lastPage" class="glyphicon glyphicon-arrow-right" style="cursor: pointer"></span>
            </div>
        @*@foreach ( var item in ViewBag.MyList)
        {
            <div class="ForumThread">
                <span class="glyphicon-cloud" style="display: inline;"></span>
                <a class="forumTitle" href="/Forums/ViewPost/@item.Id">@item.Title</a>
                <a class="forumAuthor" href="/Dashboard/Index/@item.Author">@item.Author</a>
                <span class="postViews">@item.Views</span>
            </div>
           
        }*@
        </div>
    </div>
</body>
</html>
<script src="~/Scripts/knockout-3.4.0.js"></script>
<script src="~/Scripts/moment.js"></script>
<script>
    function ForumsViewModel() {
        var self = this;

        self.posts = @Html.Raw(JsonConvert.SerializeObject(Model, new JsonSerializerSettings { ReferenceLoopHandling =  ReferenceLoopHandling.Ignore} ));
        self.pageSize = 10;
        self.currentPage = ko.observable(1);
        self.currentPosts = ko.computed(function () {
            var startIndex = (self.currentPage() - 1) * self.pageSize;
            var endIndex = startIndex + self.pageSize;
            return self.posts.slice(startIndex, endIndex);
        });
        self.lastPage = Math.ceil(self.posts.length / self.pageSize);
        self.nextPage = function () {
            self.currentPage(self.currentPage() + 1);
        };
        self.previousPage = function () {
            self.currentPage(self.currentPage() - 1);
        };
        
    };
    ko.applyBindings(new ForumsViewModel());
</script>
